name: CI/CD Pipeline

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub (from one secret)
        run: |
          USERNAME=$(echo "${{ secrets.DOCKERHUB_CREDENTIAL }}" | cut -d ':' -f 1)
          PASSWORD=$(echo "${{ secrets.DOCKERHUB_CREDENTIAL }}" | cut -d ':' -f 2)
          echo "$PASSWORD" | docker login -u "$USERNAME" --password-stdin

      - name: Build Docker image
        run: |
          USERNAME=$(echo "${{ secrets.DOCKERHUB_CREDENTIAL }}" | cut -d ':' -f 1)
          docker build -t "$USERNAME/my-app:latest" .

      - name: Push Docker image
        run: |
          USERNAME=$(echo "${{ secrets.DOCKERHUB_CREDENTIAL }}" | cut -d ':' -f 1)
          docker push "$USERNAME/my-app:latest"

      - name: Deploy on App Server
        run: |
          HOST=$(echo "${{ secrets.SSH_SECRET }}" | cut -d '|' -f 1)
          PEM_KEY=$(echo "${{ secrets.SSH_SECRET }}" | cut -d '|' -f 2-)

          echo "$PEM_KEY" > key.pem
          chmod 600 key.pem

          USERNAME=$(echo "${{ secrets.DOCKERHUB_CREDENTIAL }}" | cut -d ':' -f 1)

          ssh -o StrictHostKeyChecking=no -i key.pem "$HOST" << EOF
            docker stop my-app || true
            docker rm my-app || true
            docker rmi "$USERNAME/my-app:latest" || true
            docker pull "$USERNAME/my-app:latest"
            docker run -d --name my-app -p 3000:3000 "$USERNAME/my-app:latest"
EOF
        shell: bash
